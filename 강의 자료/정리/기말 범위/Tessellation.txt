▶ 테셀레이션
- 헐 셰이더 단계: 입력 제어점으로 부터 출력 제어점과 패치 상수 생성, 리턴
- 테셀레이션 단계: 도메인을 작고 많은 프리미티브로 분할
- 도메인 셰이더 단계: 분할된 점의 정점 위치 계산
- 테셀레이션은 적은 다각형으로 구성된 표면을 아주 세밀한 프리미티브로 변경

▶ 헐 셰이더
- 입력 패치마다 한번씩 호출
- 1~32개의 제어점을 가지고 있는 패치 리스트를 입력 받아 해당 패치가 얼마나 세밀하게 테셀레이션될지 결정하는 테셀레이션 팩터를 출력
① 헐 셰이더 입력 및 출력 제어점 정의
② 출력 패치 상수 데이터 정의
③ 패치 상수 함수 정의(HS_CONSTANT_OUTPUT 리턴)
④ 헐 셰이더 함수를 정의, 각 출력 제어점에 대해 한 번씩 호출

▶ 헐 셰이더 시멘틱
▷ SV_TessFactor
- 패치의 각 엣지에 대한 테셀레이션 양 정의
- 사각형 패치의 시작은 왼쪽 엣지부터, 삼각형 패치의 시작은 두 번째 엣지부터
- 모든 테셀레이션 인자가 0이면 그 패치는 파이프라인에서 처리 X
▷ SV_InsideTessFactor
- 패치 표면에 대한 테셀레이션 양 정의
- 테셀레이션 인자들은 배열로 선언되어야 함
▷ SV_OutputControlPointID: 헐 셰이더에서 현재 사용하는 출력 제어점의 인덱스 정의
▷ SV_DomainLocation: 현재 도메인 점의 헐에서의 위치 정의
▷ domain: 패치 유형
▷ partitioning: 분할 방법(테셀레이션 인자 사용 방법)
▷ outputtopology: 출력 프리미티브 유형
▷ outputcontrolpoints: 출력 제어점의 개수
▷ pathconstantfunc: 패치 상수 함수 이름
▷ maxtessfactor: 최대 테셀레이션 인자

▶ 도메인 셰이더
- 헐 셰이더에서 넘겨주는 패치 상수에 해당하는 정보
- 실제적인 정점들을 생성하고, 그 정점들에 대해 트랜스폼 하는 과정
- 테셀레이터가 생성한 정점의 위치는 출력 패치의 헐에 대한 중심 좌표계로 주어짐

▶ 테셀레이션 설정법
① 테셀레이션 컨트롤 포인트 밀도 정의(헐 셰이더)
② PutputPatch 형식으로 입력을 받고 테셀레이션 팩터를 설정
③ 헐 셰이더에서 생성한 데이터와 테셀레이션 좌표를 사용해 최종 정점 데이터 계산(도메인 셰이더)
④ 테셀레이션 후의 데잍터를 기반으로 픽셀 그림
⑤ 카메라 거리 기반으로 LOD를 조절하여 성능 최적화

▶ 테셀리이션과 기하셰이더의 차이
▷ 테셀레이션
- 정점을 세밀하게 분할하여 높은 해상도 제공
- 헐, 도메인 셰이더에서 작동
- 패치 데이터를 받아 분할된 새로운 정점 및 위치 계산
▷ 기하셰이더
- 정점을 기반으로 새로운 기하학적 구조 생성
- 버텍스 셰이더에서 작동
- 정점, 선, 삼각형을 받아 새로운 기하학적 구조 객체 생성
