▶ 컴퓨트 셰이더 사용 이후
- 비디오 메모리 내용을 읽는 연산은 매우 느리기 때문에 사용

▶ 컴퓨트 셰이더
▷ RWTexture2D<float4> gtxRWOutput : register(u3)
- 2중 for문 돌려야 할거 GPU를 통해 빠르게 가능
- Read Write 모두 가능
- GPGPU 프로그래밍 제공
- 스레드는 계산 셰이더의 기본 처리 단위
- Dispatch: 지금부터 병렬 처리 작업 시~작

▶ 컴퓨트 셰이더 시멘틱
- SV_GroupThreadID: 스레드 그룹에서 계산셰이더가 실행되고 있는 스레드의 인덱스
- SV_GroupID: 계산 셰이더가 실행하고 있는 스레드 그룹의 인덱스
- SV_DispatchThreadID: 계산 셰이더가 실행하고 있는 스레드와 스레드 그룹이 결합된 인덱스
- SV_GroupIndex: 하나의 스레드 그룹에서 스레드의 인덱스
- [numthreads(n, m, l)]: 하나의 스레드 그룹의 스레드 개수(최대 1024개), 각 스레드 그룹은 n * m * l개의 스레드로 구성
- Dispatch(x, y, z): 해당 방향으로 디스패치될 그룹의 개수, 스레드 그룹의 크기를 정의, 65535보다 작아야 함

▶ GPU 메모리에서 시스템 메모리로 리소스 복사
① CPU에서 읽을 수 있는 버퍼 생성 D3D_HEAP_TYPE_READBACK
② ID3D12GraphicsCommandList::CopyResource()로 리소스를 버퍼로 복사
③ 버퍼를 Map하여 읽음

▶ 공유 메모리 동기화
- GroupMemoryBarrierWithGroupSync: 스레드 그룹의 모든 공유 접근이 끝날 떄까지, 그룹의 모든 스레드가 이 함수를 호출할 때까지 각 스레드의 실행을 멈추고 기다림
- 스레드 그룹의 모든 그룹 공유 접근이 끝날 때까지 그리고 그룹의 모든 스레드가 이 함수를 호출할 때까지 각 스레드의 실행을 멈추고 기다림
- GroupMemoryBarrier: 모든 그룹 공유 접근이 끝날 때까지 하나의 스레드 그룹의 모든 스레드의 실행을 멈추고 기다림