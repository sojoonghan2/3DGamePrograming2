▶ 트랜잭션
DB 상태를 변경시키는 작업의 단위
한꺼번에 수행되어야 할 연산을 모아놓은 것

▶ 트랜잭션의 ACID 특성
A: 원자성
C: 일관성
I: 고립성
D: 지속성
Tip) (원)하는 (일)의 (고)(지)

▶ 원자성
모두 수행되거나 전혀 수행되지 않거나

▶ 일관성
어떤 트랜잭션이 수행되기 전에 데이터베이스가 일관된 상태를 가졌다면 트랜잭션이 수행된 후에 데이터베이스는 또 다른 일관성 상태를 가짐
일관된 상태: 사용자들이 부과한 조건이 모두 지켜지고 있는 상태
① 트랜잭션이 수행 도중에는 일관된 상태를 보장 X
② 트랜잭션이 시작 전 일관된 상태가 아니면 끝난 후에 일관된 상태를 보장 X

▶ 원자성 + 일관성
트랜잭션을 하나씩 순서대로 수행하면 데이터베이스의 상태를 일관되게 유지 할 수 있음
여러 트랜잭션을 동시에 수행하면 일관된 상태 보장 불가능

▶ 고립성
여러 트랜잭션이 동시에 수행되더라도 마치 혼자 수행한 것과 같아야 함
직렬가능성: 다수의 트랜잭션들이 동시에 수행되더라도 그 결과는 어떤 순서에 따라 트랜잭션들을 하나씩 차례대로 수행한 결과와 같아야 함
-> 동시에 수행했다 하더라도 결과가 같으면(일관된 상태가 유지되면) 괜찮음

▶ 지속성
트랜잭션이 완료되면 무슨일이 있어도 그 결과를 유지

▶ DBMS 기능의 특성
무결성 제약조건: 일관성
동시성 제어: 일관성, 고립성
회복: 원자성, 지속성

▶ 트랜잭션 용어
COMMIT: 완료(성공적 종료)
ROLLBACK: 철회(비성공적 종료)

▶ 동시성 제어
스케줄: 여러 트랜잭션의 사용 방법
직렬 스케줄: 여러 트랜잭션들의 집합을 한 번에 한 트랜잭션씩 차례대로 수행
비직렬 스케줄: 여러 트랜잭션 동시 수행
직렬가능: 비직렬 스케줄의 결과가 어떤 직렬 스케줄의 수행 결과와 동등

▶ 동시성 제어 오류
갱신 손실: 수행 중인 트랜잭션이 갱신한 내용을 다른 트랜잭션에 덮어씀으로써 갱신 무효
부정 판독(쓰레기 데이터 읽기): 완료되지 않은(수행 중인) 트랜잭션이 갱신한 데이터를 읽음
반복 불가능한 읽기: 한 트랜잭션이 동일한 데이터를 두 번 읽을 때 서로 다른 값 읽음

▶ 동시성 제어 기법: 로킹
로크: 데이터베이스 내 각 데이터 항목과 연관된 하나의 변수
각 트랜잭션이 수행을 시작하여 데이터 항목을 접근할 때마다 요청한 로크에 관한 정보는 로크 테이블에 유지
톡점 로크: 갱신할 때
공유 로크: 읽을 때
트랜잭션이 데이터 항목에 대한 접근을 끝낸 후에 로크 해제

▶ 2단계 로킹 프로토콜
로크 확장단계: 로크를 획득할 수만 있음
로크 수축단계: 로크를 해제할 수만 있음(한 개라도 해체하면 수축단계에 들어감)
엄정 2단계 로킹 프로토콜: 해제하기 시작하면 해제만 가능

▶ 2단계 로킹 프로토콜 문제점: 데드록
두 개 이상의 트랜잭션들이 서로 상대방을 보유하고 있는 로크를 요청하며 기다리는 상태

▶ 고립화 수준
한 트랜잭션이 다른 트랜잭션과 고립되는 정도
-> 고립 수준↓: 동시성↑ 정확성↓(반대도 됨)

▶ 유령현상
읽기 작업을 다시 한번 반복할 경우 이전에 없던 데이터(유령 데이터)가 나타나는 현상

▶ 고립화 수준 종류
Read uncommitted (Level 0)
- 트랜잭션에서 아직 commit 되지 않고 처리 중인 데이터를 다른 트랜잭션이 읽을 수 있음
- 갱신 솔실, 부정 판독, 반복 불가능한 읽기 모두 발생
- SELECT문을 수행하는 경우 해당 데이터에 Shared Lock 안걸림

Read committed (Level 1)
- 트랜잭션이 commit 된 데이터만 다른 트랜잭션이 읽을 수 있음
- 부정 판독 방지
- 대부분의 DBMS에서 기본으로 채택

Repeatable Read (Level 2)
- 선행 트랜잭션이 데이터를 읽는 경우 종료 전까지 다른 트랜잭션의 갱신/삭제가 불가능
- 같은 레코드의 반복적인 판독은 동일한 값으로 반환
- 반복 불가능한 읽기 방지

Serializable (Level 3)
- 선행 트랜잭션이 데이터를 읽는 경우 종료 전까지 다른 트랜잭션의 갱신/삭제/삽입이 불가능
- 새로운 레코드가 도중에 나타나지 않으므로 갱실 손실을 방지
- 완벽한 정합성을 보장

▶ 회복
재해적 고장(H/W고장): 디스크가 손상을 입어서 데이터베이스를 읽을 수 없는 고장, DB를 백업해 놓은 자기 테이프를 기반으로 함
비재해적 고장: 로그를 기반으로 즉시 갱신, 지연 갱신, 그림자 페이징 등 알고리즘
로그: 어떤 갱신 연산이 일어났는지 저장